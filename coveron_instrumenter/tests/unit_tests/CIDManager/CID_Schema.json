{
    "$schema": "http://json-schema.org/draft/2019-09/schema#",
    "title": "Coveron Instrumentation Data",
    "required": [
        "source_code_path",
        "source_code_hash",
        "instrumentation_random",
        "cri_path",
        "checkpoint_markers_enabled",
        "evaluation_markers_enabled",
        "marker_data",
        "code_data"
    ],
    "properties": {
        "source_code_path": {
            "type": "string",
            "description": "Absolute path to the source code file (path is relative to the execution path of the instrumenter)"
        },
        "source_code_hash": {
            "type": "string",
            "description": "SHA-256 hash of the data inside the source code file",
            "pattern": "^[0-9a-fA-F]{64}$"
        },
        "instrumentation_random": {
            "type": "string",
            "description": "Random 32 char string generated during instrumentation time (link to CRI file)",
            "pattern": "^[0-9a-fA-F]{32}$"
        },
        "cri_path": {
            "type": "string",
            "description": "Absolute path to the cri file"
        },
        "checkpoint_markers_enabled": {
            "type": "boolean",
            "description": "Defines, if the instrumentation includes checkpoint markers"
        },
        "evaluation_markers_enabled": {
            "type": "boolean",
            "description": "Defines, if the instrumentation includes evaluation markers"
        },
        "marker_data": {
            "type": "object",
            "description": "Marker definitions",
            "required": [
                "checkpoint_markers",
                "evaluation_markers"
            ],
            "properties": {
                "checkpoint_markers": {
                    "type": "array",
                    "description": "List of all Checkpoint markers used during the instrumentation process",
                    "minItems": 0,
                    "items": {
                        "type": "object",
                        "description": "Checkpoint marker info",
                        "required": [
                            "checkpoint_marker_id",
                            "code_position"
                        ],
                        "properties": {
                            "checkpoint_marker_id": {
                                "type": "integer",
                                "description": "Checkpoint Marker ID",
                                "minimum": 0
                            },
                            "code_position": {
                                "type": "object",
                                "description": "Checkpoint code position",
                                "required": [
                                    "line",
                                    "column"
                                ],
                                "properties": {
                                    "line": {
                                        "type": "integer",
                                        "description": "line position in code",
                                        "minimum": 1
                                    },
                                    "column": {
                                        "type": "integer",
                                        "description": "column position in code",
                                        "minimum": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "evaluation_markers": {
                    "type": "array",
                    "description": "List of all Evaluation markers used during the instrumentation process",
                    "minItems": 0,
                    "items": {
                        "type": "object",
                        "description": "Evaluation marker description",
                        "required": [
                            "evaluation_marker_id",
                            "evaluation_type",
                            "code_section"
                        ],
                        "properties": {
                            "evaluation_marker_id": {
                                "type": "integer",
                                "description": "Checkpoint Marker ID",
                                "minimum": 0
                            },
                            "evaluation_type": {
                                "type": "integer",
                                "description": "Checkpoint marker type (1=decision, 2=condition)"
                            },
                            "code_section": {
                                "type": "object",
                                "description": "Code section of the evaluation marker",
                                "required": [
                                    "start_line",
                                    "start_column",
                                    "end_line",
                                    "end_column"
                                ],
                                "properties": {
                                    "start_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "start_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "end_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    },
                                    "end_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "code_data": {
            "type": "object",
            "description": "Code data dictionary",
            "required": [
                "classes",
                "functions",
                "statements",
                "if_branches",
                "switch_branches",
                "loops"
            ],
            "properties": {
                "classes": {
                    "type": "array",
                    "description": "List of all found classes",
                    "minItems": 0,
                    "items": {
                        "type": "object",
                        "description": "Class description object",
                        "required": [
                            "class_id",
                            "class_name"
                        ],
                        "properties": {
                            "class_id": {
                                "type": "integer",
                                "description": "Unique ID for the specific class"
                            },
                            "class_name": {
                                "type": "string",
                                "description": "Name of the class"
                            }
                        }
                    }
                },
                "functions": {
                    "type": "array",
                    "description": "List of all found functions",
                    "minItems": 0,
                    "items": {
                        "type": "object",
                        "description": "Function description object",
                        "required": [
                            "function_id",
                            "function_name",
                            "checkpoint_marker_id",
                            "header_code_section",
                            "inner_code_section"
                        ],
                        "properties": {
                            "function_id": {
                                "type": "integer",
                                "description": "Unique ID for the specific function"
                            },
                            "function_name": {
                                "type": "string",
                                "description": "Name of the function"
                            },
                            "checkpoint_marker_id": {
                                "type": "integer",
                                "description": "ID of the correlating checkpoint marker"
                            },
                            "header_code_section": {
                                "type": "object",
                                "description": "Code section of the function header",
                                "required": [
                                    "start_line",
                                    "start_column",
                                    "end_line",
                                    "end_column"
                                ],
                                "properties": {
                                    "start_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "start_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "end_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    },
                                    "end_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    }
                                }
                            },
                            "inner_code_section": {
                                "type": "object",
                                "description": "Code section of the function body",
                                "required": [
                                    "start_line",
                                    "start_column",
                                    "end_line",
                                    "end_column"
                                ],
                                "properties": {
                                    "start_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "start_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "end_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    },
                                    "end_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "statements": {
                    "type": "array",
                    "description": "List of all found statements",
                    "minItems": 0,
                    "items": {
                        "type": "object",
                        "description": "Statement description object",
                        "required": [
                            "statement_id",
                            "statement_type",
                            "function_id",
                            "checkpoint_marker_id",
                            "code_section"
                        ],
                        "properties": {
                            "statement_id": {
                                "type": "integer",
                                "description": "ID of the specific statement"
                            },
                            "statement_type": {
                                "type": "integer",
                                "description": "Type of the statement (see rest of docs)",
                                "enum": [
                                    1,
                                    2,
                                    3,
                                    4,
                                    5
                                ]
                            },
                            "function_id": {
                                "type": "integer",
                                "description": "ID of the parent function"
                            },
                            "checkpoint_marker_id": {
                                "type": "integer",
                                "description": "ID of the correlating checkpoint marker"
                            },
                            "code_section": {
                                "type": "object",
                                "description": "Code section of the function body",
                                "required": [
                                    "start_line",
                                    "start_column",
                                    "end_line",
                                    "end_column"
                                ],
                                "properties": {
                                    "start_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "start_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "end_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    },
                                    "end_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    }
                                }
                            }
                        }
                    }
                },
                "if_branches": {
                    "type": "array",
                    "description": "List of if-type branches",
                    "minItems": 0,
                    "items": {
                        "type": "object",
                        "description": "If branch description object",
                        "required": [
                            "if_branch_id",
                            "function_id",
                            "branch_results"
                        ],
                        "properties": {
                            "if_branch_id": {
                                "type": "integer",
                                "description": "Unique id for the branch"
                            },
                            "function_id": {
                                "type": "integer",
                                "description": "ID of the parent function"
                            },
                            "branch_results": {
                                "type": "array",
                                "description": "List of all branches of the if-branch",
                                "minItems": 1,
                                "items": {
                                    "type": "object",
                                    "description": "If branch result description",
                                    "required": [
                                        "evaluation_marker_id",
                                        "condition_possibilities",
                                        "conditions",
                                        "result_evaluation_code_section",
                                        "result_body_code_section"
                                    ],
                                    "properties": {
                                        "evaluation_marker_id": {
                                            "type": "integer",
                                            "description": "ID of the evaluation marker for the decision"
                                        },
                                        "condition_possibilities": {
                                            "type": "array",
                                            "description": "Stores possible condition combinations for true and false decision results",
                                            "minItems": 2,
                                            "items": {
                                                "type": "object",
                                                "description": "Stores a combination of condition results and the decision result",
                                                "required": [
                                                    "decision_result",
                                                    "condition_combination"
                                                ],
                                                "properties": {
                                                    "decision_result": {
                                                        "type": "boolean",
                                                        "description": "Decision result. Can either be 'true' or 'false'"
                                                    },
                                                    "condition_combination": {
                                                        "type": "array",
                                                        "descirption": "Stores a list of all conditions and their respective results",
                                                        "items": {
                                                            "type": "object",
                                                            "description": "Condition result. Stores marker id and result",
                                                            "required": [
                                                                "evaluation_marker_id",
                                                                "condition_result"
                                                            ],
                                                            "properties": {
                                                                "evaluation_marker_id": {
                                                                    "type": "number",
                                                                    "description": "Stores the evaluation marker id of the condition"
                                                                },
                                                                "condition_result": {
                                                                    "type": "boolean",
                                                                    "description": "Stores the result. Can either be 'true', 'false' or 'x'"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "conditions": {
                                            "type": "array",
                                            "description": "Array of contained conditions",
                                            "minItems": 0,
                                            "items": {
                                                "type": "object",
                                                "description": "Condition description",
                                                "required": [
                                                    "evaluation_marker_id",
                                                    "code_section"
                                                ],
                                                "properties": {
                                                    "evaluation_marker_id": {
                                                        "type": "integer",
                                                        "description": "ID of the evaluation marker for the condition"
                                                    },
                                                    "code_section": {
                                                        "type": "object",
                                                        "description": "Code section of the condition",
                                                        "required": [
                                                            "start_line",
                                                            "start_column",
                                                            "end_line",
                                                            "end_column"
                                                        ],
                                                        "properties": {
                                                            "start_line": {
                                                                "type": "integer",
                                                                "description": "Line number (starting from 1) for the start of the code section",
                                                                "minimum": 1
                                                            },
                                                            "start_column": {
                                                                "type": "integer",
                                                                "description": "Column number (starting from 1) for the start of the code section",
                                                                "minimum": 1
                                                            },
                                                            "end_line": {
                                                                "type": "integer",
                                                                "description": "Line number (starting from 1) for the end of the code section",
                                                                "minimum": 1
                                                            },
                                                            "end_column": {
                                                                "type": "integer",
                                                                "description": "Column number (starting from 1) for the end of the code section",
                                                                "minimum": 1
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "result_evaluation_code_section": {
                                            "type": "object",
                                            "description": "Code section of the result evaluation",
                                            "required": [
                                                "start_line",
                                                "start_column",
                                                "end_line",
                                                "end_column"
                                            ],
                                            "properties": {
                                                "start_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "start_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "end_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                },
                                                "end_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                }
                                            }
                                        },
                                        "result_body_code_section": {
                                            "type": "object",
                                            "description": "Code section of the result body",
                                            "required": [
                                                "start_line",
                                                "start_column",
                                                "end_line",
                                                "end_column"
                                            ],
                                            "properties": {
                                                "start_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "start_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "end_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                },
                                                "end_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "switch_branches": {
                    "type": "array",
                    "description": "List of switch-type branches",
                    "minItems": 0,
                    "items": {
                        "type": "object",
                        "description": "Switch branch description",
                        "required": [
                            "switch_branch_id",
                            "switch_branch_code_section",
                            "cases"
                        ],
                        "properties": {
                            "switch_branch_id": {
                                "type": "integer",
                                "description": "Unique ID for the switch branch"
                            },
                            "function_id": {
                                "type": "integer",
                                "description": "ID of the parent function"
                            },
                            "switch_branch_code_section": {
                                "type": "object",
                                "description": "Code section of the switch branch",
                                "required": [
                                    "start_line",
                                    "start_column",
                                    "end_line",
                                    "end_column"
                                ],
                                "properties": {
                                    "start_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "start_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "end_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    },
                                    "end_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    }
                                }
                            },
                            "cases": {
                                "type": "array",
                                "description": "List of possible switch cases",
                                "minItems": 0,
                                "items": {
                                    "type": "object",
                                    "description": "Switch case description",
                                    "required": [
                                        "checkpoint_marker_id",
                                        "case_type",
                                        "evaluation_code_section",
                                        "body_code_section"
                                    ],
                                    "properties": {
                                        "checkpoint_marker_id": {
                                            "type": "integer",
                                            "description": "ID of the according checkpoint marker"
                                        },
                                        "case_type": {
                                            "type": "integer",
                                            "description": "case type (1=normal case, 2=default case)",
                                            "enum": [
                                                1,
                                                2
                                            ]
                                        },
                                        "evaluation_code_section": {
                                            "type": "object",
                                            "description": "Code section of the comparison value",
                                            "required": [
                                                "start_line",
                                                "start_column",
                                                "end_line",
                                                "end_column"
                                            ],
                                            "properties": {
                                                "start_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "start_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "end_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                },
                                                "end_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                }
                                            }
                                        },
                                        "body_code_section": {
                                            "type": "object",
                                            "description": "Code section of the switch expression",
                                            "required": [
                                                "start_line",
                                                "start_column",
                                                "end_line",
                                                "end_column"
                                            ],
                                            "properties": {
                                                "start_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "start_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "end_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                },
                                                "end_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "ternary_expressions": {
                    "type": "array",
                    "description": "List of all ternary expressions",
                    "minItems": 0,
                    "items": {
                        "type": "object",
                        "description": "Ternary expression description",
                        "required": [
                            "ternary_expression_id",
                            "function_id",
                            "evaluation_marker_id",
                            "evaluation_code_section",
                            "condition_possibilities",
                            "conditions",
                            "true_code_section",
                            "false_code_section"
                        ],
                        "properties": {
                            "ternary_expression_id": {
                                "type": "integer",
                                "description": "Unique ID for the ternary expression"
                            },
                            "function_id": {
                                "type": "integer",
                                "description": "ID of the parent function"
                            },
                            "evaluation_marker_id": {
                                "type": "integer",
                                "description": "ID of the according evaluation marker"
                            },
                            "condition_possibilities": {
                                "type": "array",
                                "description": "Stores possible condition combinations for true and false decision results",
                                "minItems": 2,
                                "items": {
                                    "type": "object",
                                    "description": "Stores a combination of condition results and the decision result",
                                    "required": [
                                        "decision_result",
                                        "condition_combination"
                                    ],
                                    "properties": {
                                        "decision_result": {
                                            "type": "boolean",
                                            "description": "Decision result. Can either be 'true' or 'false'"
                                        },
                                        "condition_combination": {
                                            "type": "array",
                                            "descirption": "Stores a list of all conditions and their respective results",
                                            "items": {
                                                "type": "object",
                                                "description": "Condition result. Stores marker id and result",
                                                "required": [
                                                    "evaluation_marker_id",
                                                    "condition_result"
                                                ],
                                                "properties": {
                                                    "evaluation_marker_id": {
                                                        "type": "number",
                                                        "description": "Stores the evaluation marker id of the condition"
                                                    },
                                                    "condition_result": {
                                                        "type": "boolean",
                                                        "description": "Stores the result. Can either be 'true' or 'false'. Don't care conditions are not in the list"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "conditions": {
                                "type": "array",
                                "description": "List of loop evaluation conditions",
                                "minItems": 0,
                                "items": {
                                    "type": "object",
                                    "description": "For loop evaluation condition description",
                                    "required": [
                                        "evaluation_marker_id",
                                        "code_section"
                                    ],
                                    "properties": {
                                        "evaluation_marker_id": {
                                            "type": "integer",
                                            "description": "ID of the according evaluation marker"
                                        },
                                        "code_section": {
                                            "type": "object",
                                            "description": "Code section of the condition",
                                            "required": [
                                                "start_line",
                                                "start_column",
                                                "end_line",
                                                "end_column"
                                            ],
                                            "properties": {
                                                "start_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "start_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "end_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                },
                                                "end_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "true_code_section": {
                                "start_line": {
                                    "type": "integer",
                                    "description": "Line number (starting from 1) for the start of the code section",
                                    "minimum": 1
                                },
                                "start_column": {
                                    "type": "integer",
                                    "description": "Column number (starting from 1) for the start of the code section",
                                    "minimum": 1
                                },
                                "end_line": {
                                    "type": "integer",
                                    "description": "Line number (starting from 1) for the end of the code section",
                                    "minimum": 1
                                },
                                "end_column": {
                                    "type": "integer",
                                    "description": "Column number (starting from 1) for the end of the code section",
                                    "minimum": 1
                                }
                            },
                            "false_code_section": {
                                "start_line": {
                                    "type": "integer",
                                    "description": "Line number (starting from 1) for the start of the code section",
                                    "minimum": 1
                                },
                                "start_column": {
                                    "type": "integer",
                                    "description": "Column number (starting from 1) for the start of the code section",
                                    "minimum": 1
                                },
                                "end_line": {
                                    "type": "integer",
                                    "description": "Line number (starting from 1) for the end of the code section",
                                    "minimum": 1
                                },
                                "end_column": {
                                    "type": "integer",
                                    "description": "Column number (starting from 1) for the end of the code section",
                                    "minimum": 1
                                }
                            }
                        }
                    }
                },
                "loops": {
                    "type": "array",
                    "description": "List of all loops",
                    "minItems": 0,
                    "items": {
                        "type": "object",
                        "description": "Loop description",
                        "required": [
                            "loop_id",
                            "loop_type",
                            "evaluation_marker_id",
                            "evaluation_code_section",
                            "body_code_section",
                            "condition_possibilities",
                            "conditions"
                        ],
                        "properties": {
                            "loop_id": {
                                "type": "integer",
                                "description": "Unique ID for the loop"
                            },
                            "loop_type": {
                                "type": "integer",
                                "description": "Type of the loop (1=for, 2=while, 3=do-while)",
                                "enum": [
                                    1,
                                    2,
                                    3
                                ]
                            },
                            "function_id": {
                                "type": "integer",
                                "description": "ID of the parent function"
                            },
                            "evaluation_marker_id": {
                                "type": "integer",
                                "description": "ID of the according evaluation marker"
                            },
                            "evaluation_code_section": {
                                "type": "object",
                                "description": "Code section of the loop evaluation",
                                "required": [
                                    "start_line",
                                    "start_column",
                                    "end_line",
                                    "end_column"
                                ],
                                "properties": {
                                    "start_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "start_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "end_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    },
                                    "end_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    }
                                }
                            },
                            "body_code_section": {
                                "type": "object",
                                "description": "Code section of the loop body",
                                "required": [
                                    "start_line",
                                    "start_column",
                                    "end_line",
                                    "end_column"
                                ],
                                "properties": {
                                    "start_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "start_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the start of the code section",
                                        "minimum": 1
                                    },
                                    "end_line": {
                                        "type": "integer",
                                        "description": "Line number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    },
                                    "end_column": {
                                        "type": "integer",
                                        "description": "Column number (starting from 1) for the end of the code section",
                                        "minimum": 1
                                    }
                                }
                            },
                            "condition_possibilities": {
                                "type": "array",
                                "description": "Stores possible condition combinations for true and false decision results",
                                "minItems": 2,
                                "items": {
                                    "type": "object",
                                    "description": "Stores a combination of condition results and the decision result",
                                    "required": [
                                        "decision_result",
                                        "condition_combination"
                                    ],
                                    "properties": {
                                        "decision_result": {
                                            "type": "boolean",
                                            "description": "Decision result. Can either be 'true' or 'false'"
                                        },
                                        "condition_combination": {
                                            "type": "array",
                                            "descirption": "Stores a list of all conditions and their respective results",
                                            "items": {
                                                "type": "object",
                                                "description": "Condition result. Stores marker id and result",
                                                "required": [
                                                    "evaluation_marker_id",
                                                    "condition_result"
                                                ],
                                                "properties": {
                                                    "evaluation_marker_id": {
                                                        "type": "number",
                                                        "description": "Stores the evaluation marker id of the condition"
                                                    },
                                                    "condition_result": {
                                                        "type": "boolean",
                                                        "description": "Stores the result. Can either be 'true', 'false' or 'x'"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "conditions": {
                                "type": "array",
                                "description": "List of loop evaluation conditions",
                                "minItems": 0,
                                "items": {
                                    "type": "object",
                                    "description": "For loop evaluation condition description",
                                    "required": [
                                        "evaluation_marker_id",
                                        "code_section"
                                    ],
                                    "properties": {
                                        "evaluation_marker_id": {
                                            "type": "integer",
                                            "description": "ID of the according evaluation marker"
                                        },
                                        "code_section": {
                                            "type": "object",
                                            "description": "Code section of the condition",
                                            "required": [
                                                "start_line",
                                                "start_column",
                                                "end_line",
                                                "end_column"
                                            ],
                                            "properties": {
                                                "start_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "start_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the start of the code section",
                                                    "minimum": 1
                                                },
                                                "end_line": {
                                                    "type": "integer",
                                                    "description": "Line number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                },
                                                "end_column": {
                                                    "type": "integer",
                                                    "description": "Column number (starting from 1) for the end of the code section",
                                                    "minimum": 1
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}